#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void mergesort(int arr[], int left, int right);
void merge(int arr[], int left, int mid, int right);
void display(int arr[], int size);

int main() {
    int n;
    printf("Enter the total numbers: ");
    scanf("%d", &n);
    int arr[n];
    srand(time(NULL));
    for (int i = 0; i < n; i++) {
        arr[i] = rand() % 1000;
    }
    printf("Array before sorting\n");
    display(arr, n);

    clock_t start = clock();
    mergesort(arr, 0, n - 1);
    clock_t end = clock();
    double duration = ((double) (end - start)) / CLOCKS_PER_SEC * 1000;

    printf("\nArray after sorting\n");
    display(arr, n);

    printf("\nTime for sorting is %.6f milliseconds\n", duration);
    return 0;
}

void mergesort(int arr[], int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;
        mergesort(arr, left, mid);
        mergesort(arr, mid + 1, right);
        merge(arr, left, mid, right);
    }
}

void merge(int arr[], int left, int mid, int right) {
    int temp[right - left + 1];
    int i = left, j = mid + 1, k = 0;
    while (i <= mid && j <= right) {
        if (arr[i] <= arr[j]) {
            temp[k++] = arr[i++];
        } else {
            temp[k++] = arr[j++];
        }
    }
    while (i <= mid) {
        temp[k++] = arr[i++];
    }
    while (j <= right) {
        temp[k++] = arr[j++];
    }
    for (i = left, k = 0; i <= right; i++, k++) {
        arr[i] = temp[k];
    }
}

void display(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}