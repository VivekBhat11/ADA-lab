#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX_SIZE 1000

void input(int a[], int *n) {
    printf("Enter the total numbers: ");
    scanf("%d", n);
    srand(time(NULL));
    for (int i = 0; i < *n; i++) {
        a[i] = rand() % 1000;
    }
}

void display(int a[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }
}

void quicksort(int a[], int left, int right);

void sort(int a[], int n) {
    quicksort(a, 0, n - 1);
}

void quicksort(int a[], int left, int right) {
    if (left < right) {
        int pivot = a[left];
        int i = left;
        int j = right + 1;
        do {
            do {
                i++;
            } while (i < right && a[i] < pivot);
            do {
                j--;
            } while (a[j] > pivot);
            if (i < j) {
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        } while (i < j);
        int temp = a[left];
        a[left] = a[j];
        a[j] = temp;
        quicksort(a, left, j - 1);
        quicksort(a, j + 1, right);
    }
}

int main() {
    int a[MAX_SIZE];
    int n;
    input(a, &n);
    printf("Array before sorting\n");
    display(a, n);
    clock_t startTime = clock();
    sort(a, n);
    clock_t endTime = clock();
    double duration = ((double)(endTime - startTime)) * 1000 / CLOCKS_PER_SEC;
    printf("\nArray After sorting\n");
    display(a, n);
    printf("\nTime for sorting is %.2f milli seconds\n", duration);
    return 0;
}