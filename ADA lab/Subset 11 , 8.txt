8. Subset

#include <stdio.h>

#define MAX 10

int d;
int s[MAX];
int x[MAX];

void sumOfSub(int m, int k, int r, int n) {
    x[k] = 1;
    if ((m + s[k]) == d) {
        printf("Subset:\n");
        for (int i = 1; i <= k; i++) {
            if (x[i] == 1) {
                printf("\t%d\n", s[i]);
            }
        }
    } else {
        if ((m + s[k] + s[k + 1]) <= d && (k + 1 <= n)) {
            sumOfSub(m + s[k], k + 1, r - s[k], n);
        }
        if ((m + r - s[k] >= d) && (m + s[k + 1] <= d) && (k + 1 <= n)) {
            x[k] = 0;
            sumOfSub(m, k + 1, r - s[k], n);
        }
    }
}

int main() {
    int n, sum = 0;
    printf("Enter the size of the set: ");
    scanf("%d", &n);

    printf("\nEnter the set in increasing order:\n");
    for (int i = 1; i <= n; i++) {
        scanf("%d", &s[i]);
    }

    printf("\nEnter the value of d: ");
    scanf("%d", &d);

    for (int i = 1; i <= n; i++) {
        sum += s[i];
    }

    if (sum < d || s[1] > d) {
        printf("No subset possible\n");
    } else {
        sumOfSub(0, 1, sum, n);
    }

    return 0;
}